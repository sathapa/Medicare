<?php

/**
 * This is the model class for table "data_user".
 *
 * The followings are the available columns in table 'data_user':
 * @property integer $id
 * @property integer $emp_id
 * @property string $uName
 * @property string $uPass
 * @property string $sQuestion
 * @property string $sAnswer
 * @property string $role
 * @property string $stat
 */
class User extends CActiveRecord
{
	public $uPass2;

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'data_user';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('emp_id, uName, uPass, uPass2, sQuestion, sAnswer, profession, role, stat', 'required','on'=>'create'),
			array('uPass, uPass2', 'length', 'min'=>5, 'max'=>100),
            array('emp_id, uName','unique'),
            array('uPass2', 'compare', 'compareAttribute'=>'uPass','on'=>'create','message'=>'The passwords are not identical.'),
            array('emp_id', 'numerical', 'integerOnly'=>true),
			array('uName, uPass, sQuestion, sAnswer, role, stat', 'length', 'max'=>100),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, emp_id, uName, uPass, sQuestion, sAnswer, role, stat', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'emp' => array(self::BELONGS_TO, 'Employee', 'emp_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'User ID',
			'emp_id' => 'Emp ID',
			'uName' => 'U Name',
			'uPass' => 'U Pass',
			'uPass2' => 'Confirm Password',
			'sQuestion' => 'S Question',
			'sAnswer' => 'S Answer',
            'profession'=>'Profession',
			'role' => 'Role',
			'stat' => 'Stat',
		);
	}

	/**
	* password encryption before saving into database
	*/
	public function beforeSave()
    {
        $Pass = sha1(md5($this->uPass));
        $this->uPass = $Pass;
        return true;
    }

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('emp_id',$this->emp_id);
		$criteria->compare('uName',$this->uName,true);
		$criteria->compare('uPass',$this->uPass,true);
		$criteria->compare('sQuestion',$this->sQuestion,true);
		$criteria->compare('sAnswer',$this->sAnswer,true);
        $criteria->compare('profession',$this->profession,true);
		$criteria->compare('role',$this->role,true);
		$criteria->compare('stat',$this->stat,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return User the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
